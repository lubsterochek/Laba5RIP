package ru.itmo.yurchik.command;

import ru.itmo.yurchik.collection.DragonCollection;
import ru.itmo.yurchik.command.base.Command;
import ru.itmo.yurchik.command.base.Environment;
import ru.itmo.yurchik.command.exception.CommandException;
import ru.itmo.yurchik.model.*;

import java.io.InputStream;
import java.io.PrintStream;
import java.time.ZonedDateTime;
import java.util.Scanner;

public class AddCommand extends Command {
    private final DragonCollection dragonCollection;
    public AddCommand(DragonCollection dragonCollection) {
        super("add");
        this.dragonCollection = dragonCollection;
    }

    @Override
    public void execute(Environment env, InputStream stdin, PrintStream stdout) throws CommandException {
        Scanner scanner = new Scanner(stdin);
        try {
            stdout.println("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –¥—Ä–∞–∫–æ–Ω–∞: ");
            String name = scanner.nextLine();

            stdout.println("–í–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã (x, y): ");
            float x = Float.parseFloat(scanner.next());
            double y = Double.parseDouble(scanner.next());

            stdout.println("–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç –¥—Ä–∞–∫–æ–Ω–∞: ");
            Long age = Long.parseLong(scanner.next());

            stdout.println("–í–≤–µ–¥–∏—Ç–µ —Ü–≤–µ—Ç (BLUE, YELLOW, WHITE, BROWN): ");
            Color color = Color.valueOf(scanner.next().toUpperCase());

            stdout.println("–í–≤–µ–¥–∏—Ç–µ —Ç–∏–ø –¥—Ä–∞–∫–æ–Ω–∞ (WATER, UNDERGROUND, AIR): ");
            DragonType type = DragonType.valueOf(scanner.next().toUpperCase());

            stdout.println("–í–≤–µ–¥–∏—Ç–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä (CHAOTIC, CHAOTIC_EVIL, FICKLE): ");
            DragonCharacter character = DragonCharacter.valueOf(scanner.next().toUpperCase());

            stdout.println("–í–≤–µ–¥–∏—Ç–µ –≥–ª—É–±–∏–Ω—É –ø–µ—â–µ—Ä—ã –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–∫—Ä–æ–≤–∏—â: ");
            double depth = Double.parseDouble(scanner.next());
            Float treasures = Float.parseFloat(scanner.next());

            // üîπ –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –¥—Ä–∞–∫–æ–Ω–∞
            Dragon newDragon = new Dragon(name, new Coordinates(x, y), ZonedDateTime.now(), age, color, type, character, new DragonCave(depth, treasures));

            // üîπ –î–æ–±–∞–≤–ª—è–µ–º –¥—Ä–∞–∫–æ–Ω–∞ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é
            dragonCollection.addDragon(newDragon);
            stdout.println("‚úÖ –î—Ä–∞–∫–æ–Ω —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω: " + newDragon);

        } catch (Exception e) {
            stdout.println(" –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ –¥–∞–Ω–Ω—ã—Ö! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
        }
    }

    @Override
    public String getHelp() {
        return "add new Dragon";
    }
}
